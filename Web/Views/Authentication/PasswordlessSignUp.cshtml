@model Web.Models.PasswordlessSignUpModel

<header>
    <h1>Sign in</h1>
    @await Component.InvokeAsync("NavBar")
</header>

<main>
    <form id="passwordlessSignUpForm" method="post">
        <input
            type="text"
            name="username"
            placeholder="Username"
            aria-label="Username"
            autoComplete="username"
            required/>
        <button type="submit">
            Sign Up
        </button>
    </form>
</main>

@section Scripts
{
    <script type="module">
      import { Client } from 'https://cdn.passwordless.dev/dist/1.1.0/esm/passwordless.min.mjs';
        
      document.getElementById('passwordlessSignUpForm').addEventListener('submit', async (e) => {
          e.preventDefault();
          const username = e.target.querySelector('input[name="username"]').value
          const response = await fetch('@Url.Action("PasswordlessSignUpWebAuthn", "Authentication")', {
             method: 'post',
             headers: {
               "Content-Type": "application/x-www-form-urlencoded",
             },
             body: `username=${encodeURIComponent(username)}`
          });
          
          const registerToken = await response.json()
          
          const p = new Client({
            apiKey: '@Model.PublicKey'
          });
          
          // Register the token with the end-user's device.
          const { token, error } = await p.register(registerToken);
          if (token) {
              alert('registered');
          } else {
            console.error(error);
          }
          
      });
    </script>
}
